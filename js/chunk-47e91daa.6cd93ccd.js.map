{"version":3,"sources":["webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/pibench-parser/pibench_parser_bg.js"],"names":["module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","lTextDecoder","TextDecoder","require","cachedTextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","freeze","UNIFORM","ZIPFAN","PiBenchData","prototype","this","input","ptr0","len0","__wrap","__wbindgen_json_parse","arg0","arg1","JSON","parse","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_object_drop_ref","__wbindgen_throw"],"mappings":"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","file":"js/chunk-47e91daa.6cd93ccd.js","sourcesContent":["module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as wasm from './pibench_parser_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const KeyDistribution = Object.freeze({ UNIFORM:0,ZIPFAN:1, });\n/**\n*/\nexport class BenchmarkEnv {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_benchmarkenv_free(ptr);\n    }\n}\n/**\n*/\nexport class BenchmarkOptions {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_benchmarkoptions_free(ptr);\n    }\n}\n/**\n*/\nexport class BenchmarkResults {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_benchmarkresults_free(ptr);\n    }\n}\n/**\n*/\nexport class LatencyResults {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_latencyresults_free(ptr);\n    }\n}\n/**\n*/\nexport class PCMResults {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pcmresults_free(ptr);\n    }\n}\n/**\n*/\nexport class PiBenchData {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PiBenchData.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_pibenchdata_free(ptr);\n    }\n    /**\n    * @param {string} input\n    * @returns {PiBenchData | undefined}\n    */\n    static from_text(input) {\n        var ptr0 = passStringToWasm0(input, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.pibenchdata_from_text(ptr0, len0);\n        return ret === 0 ? undefined : PiBenchData.__wrap(ret);\n    }\n    /**\n    * @returns {any}\n    */\n    to_js_value() {\n        var ret = wasm.pibenchdata_to_js_value(this.ptr);\n        return takeObject(ret);\n    }\n}\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}